setwd("~/Desktop/stat385/")
load(file="Alldata.Rdata")
subsetGenes<-sapply(Alldata$originaldata[Alldata$originaldata[,2]=="RFC2",3:110], as.numeric)
averageRFC2<-colMeans(subsetGenes)
resp <- averageRFC2
samIDs<-names(averageRFC2)
Beverages<-(samIDs%in%Alldata$trt1)*1+(samIDs%in%Alldata$trt2)*2+(samIDs%in%Alldata$trt3)*3+(samIDs%in%Alldata$trt4)*4
hours<-(samIDs%in%Alldata$time_h0)*0+(samIDs%in%Alldata$time_h1)*1+(samIDs%in%Alldata$time_h2)*2+(samIDs%in%Alldata$time_h4)*4+(samIDs%in%Alldata$time_h12)*12
Beverages <- factor(Beverages)
colvec<-NULL
pchvec<-NULL
ltyvec<-NULL
plot(hours,resp,xlab="Hours",ylab="gene expression average",type="n")
for (bever in 1:4)
{
BeverHourAve<-tapply(resp[(Beverages==bever)],hours[(Beverages==bever)],mean)
points(c(0,1,2,4,12),BeverHourAve,col=bever,pch=bever)
lines(c(0,1,2,4,12),BeverHourAve,col=bever)
colvec<-c(colvec,bever)
pchvec<-c(pchvec,bever)
ltyvec<-c(ltyvec,bever)
}
legendtext<-c("Alcohol","Grape juice","Red wine","Water")
legend(8,4.5,legendtext,col=colvec,pch=pchvec,lty=ltyvec)
## Question 4: Construct linear model for gene expression (should have an LM in it) (4 - model, 5 - coefficients, 6 - model, 7 - prediction)
lm1 <- lm(averageRFC2 ~ Beverages)
## Question 5: Analyze coefficient(s)
summary(lm1)
## Question 6: (should have an LM in it, call it lm3 so that it works in Q7)
lm3 <- lm(averageRFC2 ~ Beverages + hours)
newdata<-as.data.frame(list(BeverFac="1",hours=6, hours2=36, hours3=216))
newprediction<-predict(lm3,newdata,interval="predict")
head(hours)
hours
## Question 6: Construct linear model for gene expression using both beverages and hours (should have an LM in it, call it lm3 so that it works in Q7)
lm3 <- lm(averageRFC2 ~ Beverages + hours)
newdata<-as.data.frame(list(BeverFac="1",hours=6, hours2=36, hours3=216))
newprediction<-predict(lm3,newdata,interval="predict")
## Question 6: Construct linear model for gene expression using both beverages and hours (should have an LM in it, call it lm3 so that it works in Q7)
lm3 <- lm(averageRFC2 ~ Beverages + hours)
summary(lm3)
newdata<-as.data.frame(list(BeverFac="1",hours=6, hours2=36, hours3=216))
newdata
hours
## Question 6: Construct linear model for gene expression using both beverages and hours (should have an LM in it, call it lm3 so that it works in Q7)
lm3 <- lm(averageRFC2 ~ Beverages + hours^3)
summary(lm3)
## Question 6: Construct linear model for gene expression using both beverages and hours (should have an LM in it, call it lm3 so that it works in Q7)
lm3 <- lm(averageRFC2 ~ Beverages + hours + hours^2 + hours^3)
summary(lm3)
## Question 6: Construct linear model for gene expression using both beverages and hours (should have an LM in it, call it lm3 so that it works in Q7)
lm3 <- lm(averageRFC2 ~ Beverages, hours^3)
lm3 <- lm(averageRFC2 ~ Beverages + hours + hours3)
## Question 6: Construct linear model for gene expression using both beverages and hours (should have an LM in it, call it lm3 so that it works in Q7)
hours3 <- hours^3
lm3 <- lm(averageRFC2 ~ Beverages + hours + hours3)
summary(lm3)
lm3 <- lm(averageRFC2 ~ Beverages + hours3)
summary(lm3)
newdata<-as.data.frame(list(BeverFac="1",hours=6, hours2=36, hours3=216))
newprediction<-predict(lm3,newdata,interval="predict")
## Question 6: Construct linear model for gene expression using both beverages and hours (should have an LM in it, call it lm3 so that it works in Q7)
hours2 <- hours^2
hours3 <- hours^3
lm3 <- lm(averageRFC2 ~ Beverages + hours + hours2 + hours3)
summary(lm3)
newdata<-as.data.frame(list(BeverFac="1",hours=6, hours2=36, hours3=216))
newprediction<-predict(lm3,newdata,interval="predict")
lm3 <- lm(averageRFC2 ~ Beverages + hours3)
newdata<-as.data.frame(list(BeverFac="1",hours3=216))
newprediction<-predict(lm3,newdata,interval="predict")
newdata<-data.frame(list(BeverFac="1",hours3=216))
newprediction<-predict(lm3,newdata,interval="predict")
newdata<-as.data.frame(list(Beverages="1",hours=6, hours2=36, hours3=216))
newprediction<-predict(lm3,newdata,interval="predict")
newprediction
newprediction<-predict(lm3,newdata,interval="predict", level = .95)
newprediction
mean(exp_sample > 2)
# Q1
set.seed(385)
exp_sample <- rexp(500, 1/4)
mean(exp_sample)
var(exp_sample)
hist(exp_sample)
mean(exp_sample > 2)
pexp(2, rate = 1/4, lower.tail = FALSE)
# (b)
matrix(exp_sample, nrow = 10, ncol = 50, byrow = TRUE)
# Q1 (a)
set.seed(385)
exp_sample <- rexp(500, 1/4)
mean(exp_sample)
var(exp_sample)
hist(exp_sample)
mean(exp_sample > 2)
pexp(2, rate = 1/4, lower.tail = FALSE)
# (b)
matrix(exp_sample, nrow = 10, ncol = 50, byrow = TRUE)
# (b)
m1 <- matrix(exp_sample, nrow = 10, ncol = 50, byrow = TRUE)
col_means <- apply(m1, 2, mean)
col_means
# (c)
exp_sample[exp_sample>4]
