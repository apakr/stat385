getwd()
setwd("/Desktop/stat385/lab7")
setwd("~/Desktop/stat385/lab7")
getwd()
setwd("~/Desktop/stat385/lab7")
chromoX<-read.table(file="ChromoXmicroarray.txt",header=TRUE)
BLClabels<-c(rep(1,27),rep(2,20))
packages.install("Rfast")
install.packages("Rfast")
ttests<-function(x,group)
{
x<-as.numeric(x)
pvalue<-t.test(x ~ group)$p.value;
return(pvalue)
}
pvalues<-apply(chromoX[,c(3:49)],1,ttests,group=BLClabels)
smallpvals<-order(pvalues)[1:8]
features8<-chromoX[smallpvals,c(3:49)]
normalization<-function(x)
{
norms<-(x-min(x))/(max(x)-min(x))
return(norms)
}
microdata8<-apply(features8,1,normalization)
set.seed(20240214)
training <- sample(1:47,30)
test <- c(1:47)[-training]
train.set <- microdata8[training,]
train.label <- BLClabels[training]
test.set <- microdata8[test,]
test.label <- BLClabels[test]
##install.packages("Rfast")
library(Rfast)
install.packages("Rfast")
library(Rfast)
install.packages("Rfast")
install.packages("Rfast")
install.packages("Rfast")
install.packages("Rfast")
install.packages("Rfast")
library(class)
nfold<-10
nsample<-ceiling(nrow(microdata8)/nfold)
kvec<-c(3:20)
AccuTab<-matrix(0,length(kvec),nfold)
orderandom<-sample(1:nrow(microdata8), nrow(microdata8))
intfold <- nrow(microdata8)%/%nsample
remainder <- nrow(microdata8)%%nsample
for (j in 1:length(kvec))
{
for (i in 1:intfold)
{
test<-orderandom[(i-1)*nsample+c(1:nsample)]
train.set.cv<-microdata8[-test,]
test.set.cv<-microdata8[test,]
microdata8.pred <- class::knn(train=train.set.cv, test=test.set.cv, cl=BLClabels[-test], k=kvec[j])
truth<-BLClabels[test]
AccuTab[j,i] <- sum(truth==microdata8.pred)
}
if (remainder!=0)
{
test<-orderandom[intfold*nsample+c(1:remainder)]
train.set.cv<-microdata8[-test,]
test.set.cv<-microdata8[test,]
microdata8.pred <- class::knn(train=train.set.cv, test=test.set.cv, cl=BLClabels[-test], k=kvec[j])
truth<-BLClabels[test]
AccuTab[j,nfold] <- sum(truth==microdata8.pred)
}
}
AveAccuray<-apply(AccuTab,1,sum)/nrow(microdata8)
plot(kvec,AveAccuray,xlab="Value of K",ylab="Classification Accuracy")
hand.selected.k <- kvec[which(AveAccuray==max(AveAccuray))]
pred.selected.k <- class::knn(train=train.set, test=test.set, cl=train.label, k=hand.selected.k[1])
TestAccuracy <- table(pred.selected.k,test.label)
TestAccuracy
allcomb <- combn(1:8, 3) ## generate all combinations of submodels
nfold<-10
nsample<-ceiling(nrow(microdata8)/nfold)
kvec <- c(3:10)
AccuArray <- array(0,c(dim(allcomb)[2],nfold,length(kvec)))
orderandom <- sample(1:nrow(microdata8), nrow(microdata8))
intfold <- nrow(microdata8)%/%nsample
remainder <- nrow(microdata8)%%nsample
for (j in 1:dim(allcomb)[2])
{
for (k in 1:length(kvec))
{
## Please provide your code here to evaluate the prediction accuracy
## for the j-th submodel and k-th k value
}
}
for (j in 1:dim(allcomb)[2])
{
for (k in 1:length(kvec))
{
test<-orderandom[(i-1)*nsample+c(1:nsample)]
train.set.cv<-microdata8[-test,]
test.set.cv<-microdata8[test,]
microdata8.pred <- class::knn(train=train.set.cv, test=test.set.cv, cl=BLClabels[-test], k=kvec[k])
truth<-BLClabels[test]
AccuTab[j,i] <- sum(truth==microdata8.pred)
## Please provide your code here to evaluate the prediction accuracy
## for the j-th submodel and k-th k value
}
}
for (j in 1:dim(allcomb)[2])
{
for (k in 1:length(kvec))
{
test<-orderandom[(i-1)*nsample+c(1:nsample)]
train.set.cv<-microdata8[-test,]
test.set.cv<-microdata8[test,]
microdata8.pred <- class::knn(train=train.set.cv, test=test.set.cv, cl=BLClabels[-test], k=kvec[k])
truth<-BLClabels[test]
AccuTab[k,i] <- sum(truth==microdata8.pred)
## Please provide your code here to evaluate the prediction accuracy
## for the j-th submodel and k-th k value
}
}
AveAccuracyTable <- apply(AccuArray,c(1,3),sum)/nrow(microdata8)
MaxAccuracyModels <- apply(AveAccuracyTable,1,max)
ModelAndAccuracy <- cbind(t(allcomb), MaxAccuracyModels)
