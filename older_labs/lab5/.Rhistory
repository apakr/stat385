"hello"
install.packages("car","gplots","HH","rrcov","multicomp","effects","MASS","mvoutlier")
11715.25+3841.12-1372.55
## Question 1: read data into R
setwd("lab5")
## Question 1: read data into R
setwd("lab5")
getwd()
cd Desktop
cd Desktop
ls
setwd(Desktop/stat385)
setwd(~/Desktop/stat385)
setwd("Desktop/stat385/")
## Question 1: read data into R
setwd("lab5")
polls2008<-read.csv(file="2008-polls.csv",header=TRUE)
polls2012<-read.csv(file="2012-polls.csv",header=TRUE)
results2008<-read.csv(file="2008-results.csv",header=TRUE)
polls2008<-read.csv(file="2008-polls.csv",header=TRUE)
polls2012<-read.csv(file="2012-polls.csv",header=TRUE)
results2008<-read.csv(file="2008-results.csv",header=TRUE)
results2012 <- read.csv(file= "2012-results.csv", header=TRUE)
pollsters20085<-table(polls2008$Pollster)[table(polls2008$Pollster)>=5]
pollsters20125<-table(polls2012$Pollster)[table(polls2012$Pollster)>=5]
subset1<-names(pollsters20085)[names(pollsters20085)%in%names(pollsters20125)]
pollers<-names(pollsters20125)[names(pollsters20125)%in%subset1]
subsamplesID2008<-polls2008[,5]%in%pollers
polls2008sub<-polls2008[subsamplesID2008,]
subsamplesID2012<-polls2012[,5]%in%pollers
polls2012sub<-polls2012[subsamplesID2012,]
winers2008<-(results2008[,2]-results2008[,3]>0)+0
StateID2008<-results2008[,1]
Allresponses<-NULL
for (sid in 1:51)
{
polls2008substate<-polls2008sub[polls2008sub$State==StateID2008[sid],]
pollwiners2008state<-(polls2008substate[,2]-polls2008substate[,3]>0)+0
pollwinersIND<-(pollwiners2008state==winers2008[sid])+0
Allresponses<-c(Allresponses,pollwinersIND)
}
margins<-abs(polls2008sub[,2]-polls2008sub[,3])
lagtime<-rep(0,dim(polls2008sub)[1])
electiondate2008<-c("Nov 04 2008")
for (i in 1:dim(polls2008sub)[1])
{
lagtime[i]<-as.Date(electiondate2008, format="%b %d %Y")-as.Date(as.character(polls2008sub[i,4]), format="%b %d %Y")
}
dataset2008<-cbind(Allresponses,as.character(polls2008sub[,1]),margins,lagtime,as.character(polls2008sub[,5]))
stateslist<-unique(dataset2008[which(dataset2008[,1]=="0"),2])
subdataset2008<-dataset2008[dataset2008[,2]%in%stateslist,]
resp<-as.integer(subdataset2008[,1])
statesFAC<-as.factor(subdataset2008[,2])
margins<-as.double(subdataset2008[,3])
lagtime<-as.double(subdataset2008[,4])
pollersFAC<-as.factor(subdataset2008[,5])
logitreg1<-glm(resp~margins+lagtime+pollersFAC,family="binomial")
summary(logitreg1)
polls2008_dataNew <- data.frame(margins = 5, lagtime = 14, pollersFAC = "Rasmussen")
predicted_prob <- predict(logitreg1, newdata = polls2008_dataNew, type = "response")
pred_prob <- predict(logitreg1, newdata = polls2008_dataNew, type = "response")
pred_prob
polls2008_dataNew <- data.frame(margins = 5, lagtime = 14, pollersFAC = "Rasmussen")
pred_prob <- predict(logitreg1, newdata = polls2008_dataNew, type = "response")
pred_prob
pollwiners2012<-(polls2012sub[,2]-polls2012sub[,3]>0)+0
margins2012<-abs(polls2012sub[,2]-polls2012sub[,3])
lagtime2012<-rep(0,dim(polls2012sub)[1])
electiondate2012<-c("Nov 06 2012")
for (i in 1:dim(polls2012sub)[1])
{
lagtime2012[i]<-as.Date(electiondate2012, format="%b %d %Y")-as.Date(as.character(polls2012sub[i,4]), format="%b %d %Y")
}
dataset2012<-cbind(pollwiners2012,as.character(polls2012sub[,1]),margins2012,lagtime2012,as.character(polls2012sub[,5]))
subdataset2012<-dataset2012[dataset2012[,2]%in%stateslist,]
margins2012<-as.double(subdataset2012[,3])
lagtime2012<-as.double(subdataset2012[,4])
pollersFAC2012<-as.factor(subdataset2012[,5])
NOpolls<-sum(subdataset2012[,2]=="MI")
locations<-which(subdataset2012[,2]=="MI")
MIPredictresults1<-cbind(as.double(subdataset2012[locations,1]),rep(0,NOpolls))
counts<-0
for (i in locations)
{
counts<-counts+1
MIdatapoints<-data.frame(margins=margins2012[i], lagtime=lagtime2012[i], pollersFAC=pollersFAC2012[i])
MIPredictresults1[counts,2]<-predict(logitreg1, MIdatapoints, type="response")
}
MIprobDemwin1<-MIPredictresults1[,1]*MIPredictresults1[,2]+(1-MIPredictresults1[,1])*(1-MIPredictresults1[,2])
MImeanProbDemwin1<-mean(MIprobDemwin1)
MIprobGopwin1<-(1-MIPredictresults1[,1])*MIPredictresults1[,2]+MIPredictresults1[,1]*(1-MIPredictresults1[,2])
MImeanProbGopwin1<-mean(MIprobGopwin1)
state_probs <- list()
state_probs <- list()
for (state in c("CO", "VA", "OH", "GA")) {
state_data <- subdataset2012[subdataset2012[, 2] == state, ]
NoPolls <- sum(state_data[, 2] == state)
state_predict_results <- matrix(0, nrow = NoPolls, ncol = 2)
counts <- 0
for (i in which(state_data[, 2] == state)) {
counts <- counts + 1
state_datapoints <- data.frame(
margins = margins2012[i],
lagtime = lagtime2012[i],
pollersFAC = pollersFAC2012[i]
)
state_predict_results[counts, 2] <- predict(logitreg1, state_datapoints, type = "response")
}
state_probs[[state]] <- mean(state_predict_results[, 2])
}
state_probs
# WIND represents whether Democrats won each state (1 if Dem > Rep, else 0)
WIND <- ifelse(results2012$Dem > results2012$Rep, 1, 0)
# Create empty vectors to store results
predicted_winners <- c()
actual_winners <- c()
accuracy_scores <- c()
# Colorado (CO)
state <- "CO"
avg_prob_dem_win_CO <- state_probs[[state]] # 0.6270428
avg_prob_gop_win_CO <- 1 - avg_prob_dem_win_CO # 0.3729572
winnerPredicted_CO <- ifelse(avg_prob_dem_win_CO > avg_prob_gop_win_CO, "Democrat", "Republican")
actualWinner_CO <- ifelse(WIND[results2012$State == state] == 1, "Democrat", "Republican")
accuracy_CO <- ifelse(winnerPredicted_CO == actualWinner_CO, 1, 0)
predicted_winners <- c(predicted_winners, winnerPredicted_CO)
actual_winners <- c(actual_winners, actualWinner_CO)
accuracy_scores <- c(accuracy_scores, accuracy_CO)
# Virginia (VA)
state <- "VA"
avg_prob_dem_win_VA <- state_probs[[state]] # 0.5888341
avg_prob_gop_win_VA <- 1 - avg_prob_dem_win_VA # 0.4111659
winnerPredicted_VA <- ifelse(avg_prob_dem_win_VA > avg_prob_gop_win_VA, "Democrat", "Republican")
actualWinner_VA <- ifelse(WIND[results2012$State == state] == 1, "Democrat", "Republican")
accuracy_VA <- ifelse(winnerPredicted_VA == actualWinner_VA, 1, 0)
predicted_winners <- c(predicted_winners, winnerPredicted_VA)
actual_winners <- c(actual_winners, actualWinner_VA)
accuracy_scores <- c(accuracy_scores, accuracy_VA)
# Ohio (OH)
state <- "OH"
avg_prob_dem_win_OH <- state_probs[[state]] # 0.590914
avg_prob_gop_win_OH <- 1 - avg_prob_dem_win_OH # 0.409086
winnerPredicted_OH <- ifelse(avg_prob_dem_win_OH > avg_prob_gop_win_OH, "Democrat", "Republican")
actualWinner_OH <- ifelse(WIND[results2012$State == state] == 1, "Democrat", "Republican")
accuracy_OH <- ifelse(winnerPredicted_OH == actualWinner_OH, 1, 0)
predicted_winners <- c(predicted_winners, winnerPredicted_OH)
actual_winners <- c(actual_winners, actualWinner_OH)
accuracy_scores <- c(accuracy_scores, accuracy_OH)
# Georgia (GA)
state <- "GA"
avg_prob_dem_win_GA <- state_probs[[state]] # 0.618575
avg_prob_gop_win_GA <- 1 - avg_prob_dem_win_GA # 0.381425
winnerPredicted_GA <- ifelse(avg_prob_dem_win_GA > avg_prob_gop_win_GA, "Democrat", "Republican")
actualWinner_GA <- ifelse(WIND[results2012$State == state] == 1, "Democrat", "Republican")
accuracy_GA <- ifelse(winnerPredicted_GA == actualWinner_GA, 1, 0)
predicted_winners <- c(predicted_winners, winnerPredicted_GA)
actual_winners <- c(actual_winners, actualWinner_GA)
accuracy_scores <- c(accuracy_scores, accuracy_GA)
# Output results
results_df <- data.frame(
State = c("CO", "VA", "OH", "GA"),
Predicted_Winner = predicted_winners,
Actual_Winner = actual_winners,
Accuracy = accuracy_scores
)
print(results_df)
state_probs <- list()
for (state in c("CO", "VA", "OH", "GA")) {
state_data <- subdataset2012[subdataset2012[, 2] == state, ]
NoPolls <- sum(state_data[, 2] == state)
state_predict_results <- matrix(0, nrow = NoPolls, ncol = 2)
counts <- 0
for (i in which(state_data[, 2] == state)) {
counts <- counts + 1
state_datapoints <- data.frame(
margins = margins2012[i],
lagtime = lagtime2012[i],
pollersFAC = pollersFAC2012[i]
)
state_predict_results[counts, 2] <- predict(logitreg1, state_datapoints, type = "response")
}
state_probs[[state]] <- mean(state_predict_results[, 2])
}
state_probs
# WIND represents whether Democrats won each state (1 if Dem > Rep, else 0)
WIND <- ifelse(results2012$Dem > results2012$Rep, 1, 0)
# Create empty vectors to store results
predicted_winners <- c()
actual_winners <- c()
accuracy_scores <- c()
# Colorado (CO)
state <- "CO"
avg_prob_dem_win_CO <- state_probs[[state]] # 0.6270428
avg_prob_gop_win_CO <- 1 - avg_prob_dem_win_CO # 0.3729572
winnerPredicted_CO <- ifelse(avg_prob_dem_win_CO > avg_prob_gop_win_CO, "Democrat", "Republican")
actualWinner_CO <- ifelse(WIND[results2012$State == state] == 1, "Democrat", "Republican")
accuracy_CO <- ifelse(winnerPredicted_CO == actualWinner_CO, 1, 0)
predicted_winners <- c(predicted_winners, winnerPredicted_CO)
actual_winners <- c(actual_winners, actualWinner_CO)
accuracy_scores <- c(accuracy_scores, accuracy_CO)
# Virginia (VA)
state <- "VA"
avg_prob_dem_win_VA <- state_probs[[state]] # 0.5888341
avg_prob_gop_win_VA <- 1 - avg_prob_dem_win_VA # 0.4111659
winnerPredicted_VA <- ifelse(avg_prob_dem_win_VA > avg_prob_gop_win_VA, "Democrat", "Republican")
actualWinner_VA <- ifelse(WIND[results2012$State == state] == 1, "Democrat", "Republican")
accuracy_VA <- ifelse(winnerPredicted_VA == actualWinner_VA, 1, 0)
predicted_winners <- c(predicted_winners, winnerPredicted_VA)
actual_winners <- c(actual_winners, actualWinner_VA)
accuracy_scores <- c(accuracy_scores, accuracy_VA)
# Ohio (OH)
state <- "OH"
avg_prob_dem_win_OH <- state_probs[[state]] # 0.590914
avg_prob_gop_win_OH <- 1 - avg_prob_dem_win_OH # 0.409086
winnerPredicted_OH <- ifelse(avg_prob_dem_win_OH > avg_prob_gop_win_OH, "Democrat", "Republican")
actualWinner_OH <- ifelse(WIND[results2012$State == state] == 1, "Democrat", "Republican")
accuracy_OH <- ifelse(winnerPredicted_OH == actualWinner_OH, 1, 0)
predicted_winners <- c(predicted_winners, winnerPredicted_OH)
actual_winners <- c(actual_winners, actualWinner_OH)
accuracy_scores <- c(accuracy_scores, accuracy_OH)
# Georgia (GA)
state <- "GA"
avg_prob_dem_win_GA <- state_probs[[state]] # 0.618575
avg_prob_gop_win_GA <- 1 - avg_prob_dem_win_GA # 0.381425
winnerPredicted_GA <- ifelse(avg_prob_dem_win_GA > avg_prob_gop_win_GA, "Democrat", "Republican")
actualWinner_GA <- ifelse(WIND[results2012$State == state] == 1, "Democrat", "Republican")
accuracy_GA <- ifelse(winnerPredicted_GA == actualWinner_GA, 1, 0)
predicted_winners <- c(predicted_winners, winnerPredicted_GA)
actual_winners <- c(actual_winners, actualWinner_GA)
accuracy_scores <- c(accuracy_scores, accuracy_GA)
# Output results
results_df <- data.frame(
State = c("CO", "VA", "OH", "GA"),
Predicted_Winner = predicted_winners,
Actual_Winner = actual_winners,
Accuracy = accuracy_scores
)
print(results_df)
